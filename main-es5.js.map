{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/account-list/account-list.component.ts","webpack:///src/app/components/account-list/account-list.component.html","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/services/account.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AccountListComponent","accountService","accountsList","totalBalance","getList","getAccountsList","subscribe","res","forEach","element","parseFloat","balance","list","alert","HeaderComponent","AccountService","http","headers","httpOptions","url","apiUrl","get","pipe","providedIn","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AccountListComponent } from './components/account-list/account-list.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AccountListComponent,\n  },\n  {\n    path: 'accounts',\n    component: AccountListComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'acme-bank';\n  \n}\n","\n<app-header></app-header>\n<div class=\"container-fluid\">\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { AccountListComponent } from './components/account-list/account-list.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    AccountListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from 'src/app/services/account.service';\n\n@Component({\n  selector: 'app-account-list',\n  templateUrl: './account-list.component.html',\n  styleUrls: ['./account-list.component.css']\n})\nexport class AccountListComponent implements OnInit {\n\n  accountsList:any=[];\n  totalBalance:any=0;\n  constructor(private accountService:AccountService) { }\n\n  ngOnInit(): void {\n    this.getList()\n  }\n  getList(){\n    this.accountService.getAccountsList().subscribe(res=>{\n      if(res!=null){\n        this.accountsList=res;\n        res.forEach(element => {\n            this.totalBalance=this.totalBalance+parseFloat(element.balance);\n        });\n      }\n    });\n  }\n  withDrawBal(list){\n    if(list.balance>0){\n      alert('Success');\n    }\n  }\n}\n","<div class=\"card m-5\">\n    <div class=\"card-header\">\n        <h5>Account List</h5>\n    </div>\n    <div class=\"card-body p-0 mb-1\">\n        <table class=\"table table-striped mb-0\">\n            <thead>\n                <tr>\n                    <th>Account Number</th>\n                    <th>Account Type</th>\n                    <th>Balance</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                <ng-container *ngFor=\"let list of accountsList; let i=index;\">\n                    <tr>\n                        <td>{{list.account_number}}</td>\n                        <td>{{list.account_type}}</td>\n                        <td>{{list.balance | currency:'ZAR '}}</td>\n                        <td>\n                            <button class=\"btn\" (click)=\"withDrawBal(list)\" [ngClass]=\"{'btn-success':list.balance>0,'btn-default':list.balance<0}\">Withdraw</button>\n                        </td>\n                    </tr>\n                </ng-container>\n            </tbody>\n            <tfoot>\n                <tr>\n                    <th colspan=\"2\">Balance</th>\n                    <th>{{totalBalance | currency:'ZAR '}}</th>\n                    <th></th>\n                </tr>\n            </tfoot>\n        </table>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header class=\"app-header\">\n    <nav class=\"navbar navbar-light\">\n        <a class=\"navbar-brand\" href=\"#\">\n          Acme Bank\n        </a>\n      </nav>\n</header>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  constructor(private http: HttpClient) { }\n\n  getAccountsList(){\n    const  headers=new HttpHeaders({\n      'Content-Type':  'application/json; charset=utf-8'\n    })\n    const httpOptions = {\n      headers:headers\n    }\n    let url:any=environment.apiUrl+\"accounts\"\n    return this.http.get<any>(url,httpOptions)\n      .pipe(map(res=>{\n        return res;\n      }));\n  }\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl:\"http://localhost:8080/api/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}